var i: Int = 0

..prime(1);..prime(2);..prime(3);..prime(5);..prime(7);..prime(11);..prime(13);..prime(17);..prime(19);
..notPrime(4);..notPrime(6);..notPrime(8);..notPrime(9);..notPrime(10);..notPrime(12);
..notPrime(14);..notPrime(15);..notPrime(16);..notPrime(18);

..OutOfBounds(attempt: Int) :- !prime(attempt) && !notPrime(attempt)

..unification(x: Bool, i) = unification(false, j: Int)

while i < 21 {
    ..x ?= prime(i)
    if (x)
        print(i+" is a prime")
    ..x ?= notPrime(i)
    if (x)
        print(i+" is NOT a prime")
    ..x ?= OutOfBounds(i)
    if (x)
        print(i+" is out of bounds")
    i = i + 1
}

